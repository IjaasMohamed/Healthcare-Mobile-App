// Generated by view binder compiler. Do not edit!
package com.example.udemyclone.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.udemyclone.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditTipsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnUpdateCourse;

  @NonNull
  public final TextInputEditText etCourseDescription;

  @NonNull
  public final TextInputEditText etCourseImageLink;

  @NonNull
  public final TextInputEditText etCourseLink;

  @NonNull
  public final TextInputEditText etCourseName;

  @NonNull
  public final TextInputEditText etCourseSuitedFor;

  @NonNull
  public final ProgressBar progressBar;

  private ActivityEditTipsBinding(@NonNull ScrollView rootView, @NonNull Button btnCancel,
      @NonNull Button btnUpdateCourse, @NonNull TextInputEditText etCourseDescription,
      @NonNull TextInputEditText etCourseImageLink, @NonNull TextInputEditText etCourseLink,
      @NonNull TextInputEditText etCourseName, @NonNull TextInputEditText etCourseSuitedFor,
      @NonNull ProgressBar progressBar) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnUpdateCourse = btnUpdateCourse;
    this.etCourseDescription = etCourseDescription;
    this.etCourseImageLink = etCourseImageLink;
    this.etCourseLink = etCourseLink;
    this.etCourseName = etCourseName;
    this.etCourseSuitedFor = etCourseSuitedFor;
    this.progressBar = progressBar;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditTipsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditTipsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_tips, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditTipsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnUpdateCourse;
      Button btnUpdateCourse = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdateCourse == null) {
        break missingId;
      }

      id = R.id.etCourseDescription;
      TextInputEditText etCourseDescription = ViewBindings.findChildViewById(rootView, id);
      if (etCourseDescription == null) {
        break missingId;
      }

      id = R.id.etCourseImageLink;
      TextInputEditText etCourseImageLink = ViewBindings.findChildViewById(rootView, id);
      if (etCourseImageLink == null) {
        break missingId;
      }

      id = R.id.etCourseLink;
      TextInputEditText etCourseLink = ViewBindings.findChildViewById(rootView, id);
      if (etCourseLink == null) {
        break missingId;
      }

      id = R.id.etCourseName;
      TextInputEditText etCourseName = ViewBindings.findChildViewById(rootView, id);
      if (etCourseName == null) {
        break missingId;
      }

      id = R.id.etCourseSuitedFor;
      TextInputEditText etCourseSuitedFor = ViewBindings.findChildViewById(rootView, id);
      if (etCourseSuitedFor == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      return new ActivityEditTipsBinding((ScrollView) rootView, btnCancel, btnUpdateCourse,
          etCourseDescription, etCourseImageLink, etCourseLink, etCourseName, etCourseSuitedFor,
          progressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
